version: '3.9'
services:
  db:
    image: postgres:13
    volumes:
      - ./database/data:/var/lib/postgresql/data/
      - ./backup/:/backup/
    restart: always
    environment:
      - "POSTGRES_HOST_AUTH_METHOD=trust"
      - "POSTGRES_DB=postgres"
      - "POSTGRES_USER=postgres"
      - "POSTGRES_PASSWORD=postgres"
    ports:
      - "${PORT_DB}:5432"
  web:
    build:
      context: ./web
    command: ["./docker/wait-for-it.sh", "db:5432", "--timeout=30", "--strict", "--", "python", "/code/manage.py", "runserver", "0.0.0.0:8000"]
    volumes:
      - ../:/code
    restart: always
    depends_on:
        - db
        - sentry-base
    ports:
        - "5678:5678"
    environment:
      - "SENTRY_DSN=${SENTRY_DSN_BACK}"
  front:
    restart: always
    build:
      context: ../
      dockerfile: ./docker/angular/Dockerfile
    command: bash -c "npm i && npm run dev"
    environment:
      - "SENTRY_DSN=${SENTRY_DSN_FRONT}"
      - "API_URL=${FRONT_API_URL}"
    volumes:
      - ../frontend:/frontend
      - /frontend/node_modules
  reverse-proxy:
    restart: always
    build:
      context: ./nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d/:/etc/nginx/conf.d
      - ./logs/nginx:/var/log/nginx
    ports:
      - "${PORT}:8888"
    depends_on:
      - web
      - front

  sentry-base:
    image: 'sentry:latest'
    container_name: sentry-base
    restart: unless-stopped
    depends_on:
      - sentry-redis
      - sentry-postgres
    links:
      - sentry-redis
      - sentry-postgres
    ports:
      - 880:9000
    env_file:
      - sentry.env
    volumes:
      - ./sentry/sentry:/var/lib/sentry/files
#      - /srv/sentry/etc:/etc/sentry
# Uncomment the line above if using the GitHub plugin
  sentry-cron:
    image: 'sentry:latest'
    restart: unless-stopped
    depends_on:
      - sentry-base
    links:
      - sentry-redis
      - sentry-postgres
    command: "sentry run cron"
    env_file:
      - sentry.env
    volumes:
      - ./sentry/sentry:/var/lib/sentry/files
#      - /srv/sentry/etc:/etc/sentry
# Uncomment the line above if using the GitHub plugin
  sentry-worker:
    image: 'sentry:latest'
    depends_on:
      - sentry-base
    links:
      - sentry-redis
      - sentry-postgres
    command: "sentry run worker"
    env_file:
      - sentry.env
    volumes:
      - ./sentry/sentry:/var/lib/sentry/files
#      - /srv/sentry/etc:/etc/sentry
# Uncomment the line above if using the GitHub plugin
  sentry-redis:
    image: 'redis:latest'
  sentry-postgres:
    image: 'postgres:latest'
    environment:
      POSTGRES_USER: sentry
      POSTGRES_PASSWORD: sentry
      POSTGRES_DB: sentry
    volumes:
      - ./sentry/postgres:/var/lib/postgresql/data

  pgbackups:
    container_name: Backup
    image: prodrigestivill/postgres-backup-local
    restart: always
    volumes:
      - ./backup:/backups
    links:
      - db:db
    depends_on:
      - db
    environment:
      - POSTGRES_HOST=db
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_EXTRA_OPTS=-Z9 --schema=public --blobs
      - SCHEDULE=${BACKUP_SCHEDULE}
      - BACKUP_KEEP_DAYS=7
      - BACKUP_KEEP_WEEKS=4
      - BACKUP_KEEP_MONTHS=6
      - HEALTHCHECK_PORT=81